{"name":"Ps-waybackmachineavailavility","tagline":"PowerShell function to obtain Wayback Machine Availavility from Wayback Machine APIs","body":"ReadMe\r\n=============================\r\n\r\n#### what is this?\r\nPowerShell function to obtain Wayback Machine Availavility from Wayback Machine APIs\r\n\r\n#### API details\r\n\r\nRefer following API information.\r\n\r\n> [Wayback Machine APIs](http://archive.org/help/wayback_api.php)\r\n\r\n#### Usage\r\n\r\nThis Cmdlet supports API for \"Wayback Availability JSON API\".\r\n\r\nYou can use ```urls``` and ```timestamp``` parameter.\r\n\r\n\r\nAbount Cmdlet\r\n=============================\r\n\r\n## Summary\r\n\r\nHere's chart for easy understanding.\r\n\r\n|Cmdlet|pipeline input|mode|PreferUrlCount|\r\n|----|:----:|:----:|:----:|\r\n|Get-WaybackMachineAvailavility|O|Synchronous|urls < 5|\r\n|Get-WaybackMachineAvailavilityAsync|X|Aynchronous|urls >= 10|\r\n|Get-WaybackMachineAvailavilityPrallel|X|Parallel|urls < 10|\r\n\r\n#### Synchronous Cmdlet\r\n\r\nYou can use ```Get-WaybackMachineAvailavility```.\r\n\r\n- Supports pipeline input.\r\n- Synchronous cmdlet may prefer for only small number of urls. \r\n- target will be single or less then 5\r\n\r\n\r\n#### Asynchronous Cmdlet\r\n\r\nYou can use ```Get-WaybackMachineAvailavilityAsync```.\r\n\r\n- Doesn't supports pipeline input.\r\n- Asynchronous execute for each url. Prefer for large number of urls. \r\n- target will be more than 10\r\n\r\n#### Parallel Cmdlet\r\n\r\nYou can use ```Get-WaybackMachineAvailavilityParallel```.\r\n\r\n- Doesn't supports pipeline input\r\n- Parallel execute for each url. Prefer for medium number of urls.\r\n- target will be less than 10\r\n\r\nAbout Parameters\r\n=============================\r\n\r\nAll cmdlet supports same parameters.\r\n\r\n#### ```urls``` parameter\r\n\r\nInput available urls to check whether \"Wayback Machine\" is availeble.\r\nmultiple urls will be operate for each url inside cmdlet.\r\n\r\n```PowerShell\r\n# Synchronous invokation\r\nGet-WaybackMachineAvailavility -urls \"http://tech.guitarrapc.com\",\"http://neue.cc\"\r\n\r\n# Asynchronous invokation\r\nGet-WaybackMachineAvailavilityAsync -urls \"http://tech.guitarrapc.com\",\"http://neue.cc\"\r\n\r\n# Parallel invokation\r\nGet-WaybackMachineAvailavilityParallel -urls \"http://tech.guitarrapc.com\",\"http://neue.cc\"\r\n```\r\n\r\nYou can use pipeline to pass multiple url at once for ```Get-WaybackMachineAvailavility```.\r\nHowever ```Get-WaybackMachineAvailavilityAsync``` and ```Get-WaybackMachineAvailavilityParallel``` not supporting pipeling input.\r\n\r\n```Powershell\r\n# Synchronous pipeline invokation\r\n\"http://tech.guitarrapc.com\",\"http://neue.cc\" | Get-WaybackMachineAvailavility\r\n```\r\n\r\nIf invalid url was passed, then API returns null.\r\n\r\n#### ```timestamp``` parameter\r\n\r\nAdditional options which may be specified are ```timestamp```\r\n\r\nTimestamp is the timestamp to look up in Wayback. If not specified, the most recenty available capture in Wayback is returned.\r\n\r\nMake sure ```timestamp``` format as 1-14 digits of 'yyyyMMddHHmmss' or 'yyyy' or 'yyyyMM' or 'yyyyMMdd' or else.('2006' will tring to obtain closed to 2006)\r\n\r\n```PowerShell\r\n# Synchronous invokation with 20060101\r\nGet-WaybackMachineAvailavility -url http://neue.cc -timestamp 20060101\r\n\r\n# Asynchronous invokation\r\nGet-WaybackMachineAvailavilityAsync -urls \"http://tech.guitarrapc.com\",\"http://neue.cc\" -timestamp 20060101\r\n\r\n# Parallel invokation\r\nGet-WaybackMachineAvailavilityParallel -urls \"http://tech.guitarrapc.com\",\"http://neue.cc\" -timestamp 20060101\r\n```\r\n\r\nthis may result closed to ```timestamp``` date \"20060101\".\r\n\r\n#### common parameter\r\n\r\nYou can use Common parameters defined by ```[CmdletBinding()]``` , like ```Verbose``` switch.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}